{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN PROJECTS\\\\ReactJs\\\\expense-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport './Expenses.css';\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpensesList from \"./ExpensesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [selectedYear, setUpdatedYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setUpdatedYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  }); // let expensesContent = <p>No Expenses Found</p>;\n  // if(props.items.length > 0){\n  //   expensesContent = props.items.map((item)=>(\n  //      <ExpenseItem \n  //     key={item.id}\n  //     title={item.title} \n  //     amount={item.amount}          \n  //     date={item.date}/>\n  //   ));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: selectedYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      items: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"jXMgHzJ6mgH90g1etbqT5AxS9Tw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["E:/MERN PROJECTS/ReactJs/expense-app/src/components/Expenses/Expenses.js"],"names":["useState","Card","ExpenseFilter","ExpensesChart","ExpensesList","Expenses","props","selectedYear","setUpdatedYear","filterChangeHandler","filteredExpenses","items","filter","expense","date","getFullYear","toString"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,cAAf,IAA+BR,QAAQ,CAAC,MAAD,CAA7C;;AACF,QAAMS,mBAAmB,GAAGF,YAAY,IAAG;AACzCC,IAAAA,cAAc,CAACD,YAAD,CAAd;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAG;AACpD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,YAAjD;AACD,GAFwB,CAAzB,CANoB,CASpB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,YAAzB;AAAuC,MAAA,cAAc,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCL;;GApDQL,Q;;KAAAA,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport './Expenses.css';\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nfunction Expenses(props){\r\n      const [selectedYear, setUpdatedYear]=useState('2020');\r\n    const filterChangeHandler = selectedYear =>{\r\n      setUpdatedYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense =>{\r\n      return expense.date.getFullYear().toString() === selectedYear;\r\n    });\r\n    // let expensesContent = <p>No Expenses Found</p>;\r\n\r\n    // if(props.items.length > 0){\r\n    //   expensesContent = props.items.map((item)=>(\r\n    //      <ExpenseItem \r\n    //     key={item.id}\r\n    //     title={item.title} \r\n    //     amount={item.amount}          \r\n    //     date={item.date}/>\r\n    //   ));\r\n    // }\r\n      return (\r\n        <Card className=\"expenses\">\r\n          <ExpenseFilter selected={selectedYear} onChangeFilter={filterChangeHandler} />\r\n          <ExpensesChart expenses={filteredExpenses} />\r\n          <ExpensesList items={filteredExpenses}/>\r\n          \r\n          {/* using conditions outside jsx code */}\r\n          {/* {expensesContent} */}\r\n         \r\n          {/* an alternative of ternary expression is to use && which is a js trick which returns the second part of the condition */}\r\n          {/* {filteredExpenses.length === 0 &&  <p>No Expenses Found</p> }\r\n          {filteredExpenses.length > 0 && filteredExpenses.map((item)=>{\r\n            return <ExpenseItem \r\n            key={item.id}\r\n            title={item.title} \r\n            amount={item.amount}          \r\n            date={item.date}/>\r\n             }) } */}\r\n          {/* using ternary */}\r\n          {/* { filteredExpenses.length === 0 ? \r\n          <p>No Expenses Found</p> \r\n          : filteredExpenses.map((item)=>{\r\n            return <ExpenseItem \r\n            key={item.id}\r\n            title={item.title} \r\n            amount={item.amount}          \r\n            date={item.date}/>\r\n             })} */}\r\n          \r\n    \r\n        </Card>\r\n      );\r\n}\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}
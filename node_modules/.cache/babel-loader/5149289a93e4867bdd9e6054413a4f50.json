{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN PROJECTS\\\\ReactJs\\\\expense-app\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  // const [enteredTitle, setEnteredTitle ]=useState('');\n  // const [enteredAmount, setEnteredAmount ]=useState('');\n  // const [enteredDate, setEnteredDate ]=useState('');\n  //use one state instead of 3\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n\n  const titleChangeHandler = event => {\n    //setEnteredTitle(event.target.value);\n    //react replaces the old state with new one\n    //so you need to give all values\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value,\n    // });\n    //as react schedules state updates so\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    // setEnteredAmount(event.target.value);\n    setUserInput({ ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n\n  const dateChangeHandler = event => {\n    //  setEnteredDate(event.target.value);\n    setUserInput({ ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    //to stop the page from reloading\n    event.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate)\n    }; // console.log(expenseData);\n\n    props.onSaveExpenseData(expenseData); //two-way binding -> changing data of input fields by adding value keyword\n\n    setUserInput({\n      enteredTitle: '',\n      enteredAmount: '',\n      enteredDate: ''\n    });\n  }; //we can create event props for our child to pass data to parent\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput.enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: userInput.enteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"wmXYPbKtbpwaOPXQRl1cSP80VGk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["E:/MERN PROJECTS/ReactJs/expense-app/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","props","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onCancel"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) =>{\r\n    // const [enteredTitle, setEnteredTitle ]=useState('');\r\n    // const [enteredAmount, setEnteredAmount ]=useState('');\r\n    // const [enteredDate, setEnteredDate ]=useState('');\r\n    //use one state instead of 3\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    });\r\n    const titleChangeHandler = (event) =>{\r\n        //setEnteredTitle(event.target.value);\r\n       //react replaces the old state with new one\r\n       //so you need to give all values\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle: event.target.value,\r\n        // });\r\n        //as react schedules state updates so\r\n        setUserInput((prevState)=>{\r\n            return {...prevState, enteredTitle:event.target.value};\r\n        });\r\n    };\r\n    const amountChangeHandler = (event) =>{\r\n       // setEnteredAmount(event.target.value);\r\n       setUserInput({\r\n        ...userInput,\r\n        enteredAmount: event.target.value,\r\n    });\r\n    };\r\n    const dateChangeHandler = (event) =>{\r\n      //  setEnteredDate(event.target.value);\r\n      setUserInput({\r\n        ...userInput,\r\n        enteredDate: event.target.value,\r\n    });\r\n    };\r\n    const submitHandler = (event) =>{\r\n        //to stop the page from reloading\r\n        event.preventDefault();\r\n\r\n        const expenseData={\r\n            title:userInput.enteredTitle,\r\n            amount:userInput.enteredAmount,\r\n            date: new Date(userInput.enteredDate)\r\n        };\r\n       // console.log(expenseData);\r\n       props.onSaveExpenseData(expenseData);\r\n        //two-way binding -> changing data of input fields by adding value keyword\r\n        setUserInput({\r\n            enteredTitle:'',\r\n            enteredAmount:'',\r\n            enteredDate:''\r\n        });\r\n    };\r\n    //we can create event props for our child to pass data to parent\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={userInput.enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" value={userInput.enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" value={userInput.enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n            </div>          \r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}